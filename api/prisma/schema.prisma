generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

model User {
    id        Int       @id @default(autoincrement())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    email     String    @unique
    username  String    @unique
    auth0Id   String    @unique @default("")
    posts     Post[]
    berries   Berry[]
    comments  Comment[]
}

model Post {
    id         Int       @id @default(autoincrement())
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
    author     User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
    authorId   Int
    title      String    @db.VarChar(255)
    body       String    @db.Text
    comments   Comment[]
    berries    Berry[]
}

model Berry {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user      User     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    userId    Int
    post      Post     @relation(fields: [postId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    postId    Int
}

model Comment {
    id               Int       @id @default(autoincrement())
    createdAt        DateTime  @default(now())
    updatedAt        DateTime  @updatedAt
    content          String    @db.VarChar(255)
    post             Post      @relation(fields: [postId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    postId           Int
    user             User      @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    userId           Int
    parentId         Int?
    parentComment    Comment?  @relation("CommentHistory", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    childrenComments Comment[] @relation("CommentHistory")
}

