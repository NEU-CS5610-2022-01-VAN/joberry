generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

model User {
    id              Int      @id @default(autoincrement())
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
    email           String   @unique
    username        String   @unique
    password_digest String
    session_token   String   @unique
    posts           Post[]
    berries         Berry[]
    reviews         Review[]
}

model Post {
    id         Int      @id @default(autoincrement())
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    author     User     @relation(fields: [authorId], references: [id])
    authorId   Int
    title      String   @db.VarChar(255)
    body       String   @db.Text
    category   Category @relation(fields: [categoryId], references: [id])
    categoryId Int
    reviews    Review[]
    berries    Berry[]
    tags       Tag[]
}

model Berry {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user      User     @relation(fields: [userId], references: [id])
    userId    Int
    post      Post     @relation(fields: [postId], references: [id])
    postId    Int
}

model Tag {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    post      Post     @relation(fields: [postId], references: [id])
    postId    Int
}

model Review {
    id              Int      @id @default(autoincrement())
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
    content         String   @db.VarChar(255)
    post            Post     @relation(fields: [postId], references: [id])
    postId          Int
    user            User     @relation(fields: [userId], references: [id])
    userId          Int
    parentId        Int?
    parentReview    Review?  @relation("ReviewHistory", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    childrenReviews Review[] @relation("ReviewHistory")
}

model Category {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    posts     Post[]
}
